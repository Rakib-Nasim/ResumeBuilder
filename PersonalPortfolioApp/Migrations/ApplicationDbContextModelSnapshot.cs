// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalPortfolioApp.DataAccess;

namespace PersonalPortfolioApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.CityModel", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("cityModels");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.CountryModel", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("countryModels");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.PersoalModel", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("persoalModels");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.Personal_Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalId");

                    b.HasIndex("SkillId");

                    b.ToTable("personal_Skills");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.SkillModel", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("skillModels");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.CityModel", b =>
                {
                    b.HasOne("PersonalPortfolioApp.Models.Entitys.CountryModel", "Country")
                        .WithMany("ListCity")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.PersoalModel", b =>
                {
                    b.HasOne("PersonalPortfolioApp.Models.Entitys.CityModel", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PersonalPortfolioApp.Models.Entitys.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.Personal_Skill", b =>
                {
                    b.HasOne("PersonalPortfolioApp.Models.Entitys.PersoalModel", "Personal")
                        .WithMany("personal_Skill")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PersonalPortfolioApp.Models.Entitys.SkillModel", "Skill")
                        .WithMany("personal_Skill")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Personal");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.CountryModel", b =>
                {
                    b.Navigation("ListCity");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.PersoalModel", b =>
                {
                    b.Navigation("personal_Skill");
                });

            modelBuilder.Entity("PersonalPortfolioApp.Models.Entitys.SkillModel", b =>
                {
                    b.Navigation("personal_Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
